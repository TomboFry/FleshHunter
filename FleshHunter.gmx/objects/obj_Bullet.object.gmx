<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Bullet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>radius = 0;

direction = obj_Player.angle;

collision = false;

alpha = 1;

step = 0;

obj_PlayerCamera.shake += 2;

while(radius &lt; 212 &amp;&amp; collision == false)
{
    radius++;
    posx = x+lengthdir_x(radius,direction);
    posy = y+lengthdir_y(radius,direction);
    a = collision_rectangle(posx-1,posy-1,posx+1,posy+1,all,false,true);
    if(a.solid){
        collision = true;
    }
    if(a.depth = -17){
        collision = true;
        with(a) { hp -= global.weapons[global.weapon,2]*((global.weapons[global.weapon,8]/2)+1); }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(collision == false){
    step = 0;
    while(step &lt; 3 || collision == false)
    {
        radius++;
        step++;
        a = instance_position(x+lengthdir_x(radius,direction),y+lengthdir_y(radius,direction),all);
        if(a.solid){
            collision = true;
        }
        if(a.depth = -17){
            collision = true;
            with(a) { instance_destroy(); }
        }
        if(radius &gt; 212){
            collision = true;
        }
    }
} else {*/
    if(alpha &gt; 0){
        alpha -= 0.1;
    } else {
        instance_destroy();
    }
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(alpha);
draw_set_color(c_white);
draw_line_width(x,y,x+lengthdir_x(radius,direction),y+lengthdir_y(radius,direction),0.5);

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,1</point>
    <point>2,2</point>
  </PhysicsShapePoints>
</object>
