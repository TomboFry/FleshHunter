<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Weapons
global.weapons[0,0] = "Pistol";          // name of weapon
global.weapons[0,1] = 0;                 // firerate multiplier (0 = semi-auto)
global.weapons[0,2] = 1;                 // damage per hit
global.weapons[0,3] = snd_Weapon_Pistol; // the sound it makes
global.weapons[0,4] = -1;                // ammunition (-1 = infinite)
global.weapons[0,5] = true;              // whether you own it or not
global.weapons[0,6] = 10;                // price to buy
global.weapons[0,7] = 0;                 // firerate upgrades
global.weapons[0,8] = 0;                 // damage upgrades
global.weapons[0,9] = -1;                // ammo price
global.weapons[0,10] = -1;               // ammo per click
global.weapons[0,11] = -1;               // max firerate upgrade
global.weapons[0,12] = 10;               // max damage upgrade

global.weapons[1,0] = "Machine Gun";     // name of weapon
global.weapons[1,1] = 2;                 // firerate multiplier (0 = semi-auto)
global.weapons[1,2] = 2;                 // damage per hit
global.weapons[1,3] = snd_Weapon_MachineGun;// the sound it makes
global.weapons[1,4] = 100;               // ammunition (-1 = infinite)
global.weapons[1,5] = false;             // whether you own it or not
global.weapons[1,6] = 40;                // price to buy
global.weapons[1,7] = 0;                 // firerate upgrades
global.weapons[1,8] = 0;                 // damage upgrades
global.weapons[1,9] = 10;                // ammo price
global.weapons[1,10] = 50;               // ammo per click
global.weapons[1,11] = 8;                // max firerate upgrade
global.weapons[1,12] = 10;               // max damage upgrade

global.weapons[2,0] = "Grenades";        // name of weapon
global.weapons[2,1] = 0;                 // firerate multiplier (0 = semi-auto)
global.weapons[2,2] = 0;                 // damage per hit
global.weapons[2,3] = snd_Weapon_MachineGun;// the sound it makes
global.weapons[2,4] = 5;                 // ammunition (-1 = infinite)
global.weapons[2,5] = false;             // whether you own it or not
global.weapons[2,6] = 80;                // price to buy
global.weapons[2,7] = -1;                // firerate upgrades
global.weapons[2,8] = -1;                // damage upgrades
global.weapons[2,9] = 20;                // ammo price
global.weapons[2,10] = 3;                // ammo per click
global.weapons[2,11] = -1;               // max firerate upgrade
global.weapons[2,12] = 10;               // max damage upgrade

global.weapons[3,0] = "Laser Gun";       // name of weapon
global.weapons[3,1] = 0.6;               // firerate multiplier (0 = semi-auto)
global.weapons[3,2] = 5;                 // damage per hit
global.weapons[3,3] = snd_Weapon_MachineGun;// the sound it makes
global.weapons[3,4] = 100;               // ammunition (-1 = infinite)
global.weapons[3,5] = false;             // whether you own it or not
global.weapons[3,6] = 250;               // price to buy
global.weapons[3,7] = -1;                // firerate upgrades
global.weapons[3,8] = 0;                 // damage upgrades
global.weapons[3,9] = -1;                // ammo price
global.weapons[3,10] = -1;               // ammo per click
global.weapons[3,11] = -1;               // max firerate upgrade
global.weapons[3,12] = 10;               // max damage upgrade

global.maxweapons = 3; // maxweapons =  arraycount - 1


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Levels

global.level = 0;

global.totalFlesh = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(vk_escape)){
    game_end();
}

if(keyboard_check_pressed(ord('R'))){
    game_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
