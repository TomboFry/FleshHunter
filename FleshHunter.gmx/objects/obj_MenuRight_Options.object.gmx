<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text[0,0] = "Music";
text[0,1] = "On";

text[1,0] = "SFX";
text[1,1] = "On";

text[2,0] = "Fullscreen";
text[2,1] = "Off";

select = 0;
selectprev = 0;

title = "Options";

backCol = make_color_rgb(217,224,33);

xPos = 64;
step = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(step == 0){
    if(xPos &gt; 1){
        xPos = xPos / 1.1;
    } else {
        xPos = 1;
        step = 1;
    }
} else if(step == 2){
    if(xPos &lt; 64){
        xPos = xPos * 1.25;
    } else {
        xPos = 64;
        obj_MainMenuLeft.selected = false;
        instance_destroy();
    }
}


for(i = 0; i &lt; 3; i++)
{
    switch(i) {
        case 0:
            // Music
            if(global.music){
                text[i,1] = "On";
            } else {
                text[i,1] = "Off";
            }
            break;
        case 1:
            // SFX
            if(global.sfx){
                text[i,1] = "On";
            } else {
                text[i,1] = "Off";
            }
            break;
        case 2:
            // Fullscreen
            if(window_get_fullscreen()){
                text[i,1] = "On";
            } else {
                text[i,1] = "Off";
            }
            break;
    }
    if(mouse_x &gt;= 216 &amp;&amp; mouse_x &lt;= 372 &amp;&amp; mouse_y &gt;= 97 + (i*22) &amp;&amp; mouse_y &lt;= 116 + (i*22)){
        select = i;
        if(select != selectprev){
            if global.sfx audio_play_sound(snd_MenuSelect,10,false);
        }
        selectprev = select;
        if(mouse_check_button_released(mb_left)){
            if(i == 0){
                global.music = !global.music;
                if(global.music){
                    if(!audio_is_playing(mus_Level2)){
                        audio_stop_music();
                        audio_play_music(mus_Level2,true);
                    }
                } else {
                    if(audio_music_is_playing()){
                        audio_stop_music();
                    }
                }
            } else if(i == 1){
                global.sfx = !global.sfx;
            } else if(i == 2){
                window_set_fullscreen(!window_get_fullscreen());
            }
        }
    }
}

if(mouse_x &gt;= 210 &amp;&amp; mouse_x &lt;= 228 &amp;&amp; mouse_y &gt;= 68 &amp;&amp; mouse_y &lt;= 86)
{
    backCol = make_color_rgb(217,224,33);
    if(mouse_check_button_released(mb_left)){
        step = 2;
    }
}
else
{
    backCol = c_black;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha((64-xPos)/64);
for(i = 0; i &lt; 3; i++)
{
    if(i == select)
    {
        draw_set_color(make_color_rgb(217,224,33));
        draw_rectangle(216-xPos, 97 + (i*22), 344-xPos, 116 + (i*22),false);
        draw_set_color(c_black);
        draw_rectangle(344-xPos, 97 + (i*22), 372-xPos, 116 + (i*22),false);
    } else {
        draw_set_color(c_white);
    }
    draw_set_halign(fa_left);
    draw_text_transformed(220-xPos, 96 + (i*22), text[i,0],2,2,0);
    draw_set_color(c_white);
    draw_text(348-xPos,101 + (i*22),text[i,1]);
}
draw_set_halign(fa_left);
draw_set_color(c_white);
draw_text_transformed(234-xPos,64,title,3,3,0);

draw_set_color(backCol);
draw_rectangle(211-xPos,69,229-xPos,87,false);
draw_sprite_ext(spr_Tick,0,214+sprite_get_width(spr_Tick)-xPos,72,-1,1,0,-1,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
