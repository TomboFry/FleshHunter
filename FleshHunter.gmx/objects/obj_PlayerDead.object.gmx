<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text = "Game Over!";
scoretext = string(global.flesh);
timetext = string(global.mins) + ":";
if(global.secs &lt; 10){
    timetext += "0";
}
timetext += string(global.secs);

step = 0;
yPos = 64;
wait = 0;

sinval = 0;
sinout = 0;

sinvaly = 180;
sinouty = 0;

btnCol[0,0] = c_black;
btnCol[0,1] = c_white;
btnCol[0,2] = "Try Again";

btnCol[1,0] = c_black;
btnCol[1,1] = c_white;
btnCol[1,2] = "Main Menu";

room_persistent = false;

if audio_music_is_playing() audio_stop_music();
if global.sfx audio_play_sound(snd_GameOver,10,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(step == 0){
    if(yPos &gt; 1){
        yPos = yPos / 1.1;
    } else {
        yPos = 1;
        step = 1;
    }
} else if(step == 2){
    if(yPos &lt; 64){
        yPos = yPos * 1.1;
    } else {
        yPos = 64;
        room_persistent = false;
        resetGame();
        room_restart();
    }
} else if(step == 3){
    if(yPos &lt; 64){
        yPos = yPos * 1.1;
    } else {
        yPos = 64;
        room_goto(rm_MainMenu);
    }
}

if(sinval &lt; 360){
    sinval += 2;
} else {
    sinval = 0;
}
if(sinvaly &lt; 360){
    sinvaly += 3;
} else {
    sinvaly = 0;
}
sinout = sin(degtorad(sinval));
sinouty = sin(degtorad(sinvaly));

if(mouse_x &gt;= view_xview[0] + 37 &amp;&amp; mouse_y &gt;= view_yview[0] + 72 &amp;&amp; mouse_x &lt;= view_xview[0] + 74 &amp;&amp; mouse_y &lt;= view_yview[0] + 85){
    btnCol[0,0] = make_color_rgb(217,224,33);
    btnCol[0,1] = c_black;
    if(mouse_check_button_released(mb_left)){
        step = 2;
    }
} else {
    btnCol[0,0] = c_black;
    btnCol[0,1] = c_white;
}

if(mouse_x &gt;= view_xview[0] + 86 &amp;&amp; mouse_y &gt;= view_yview[0] + 72 &amp;&amp; mouse_x &lt;= view_xview[0] + 123 &amp;&amp; mouse_y &lt;= view_yview[0] + 85){
    btnCol[1,0] = make_color_rgb(217,224,33);
    btnCol[1,1] = c_black;
    if(mouse_check_button_released(mb_left)){
        step = 3;
    }
} else {
    btnCol[1,0] = c_black;
    btnCol[1,1] = c_white;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

// background rectangle
if(step &lt; 2){
    draw_set_alpha(0.75*((64-yPos)/64));
} else {
    draw_set_alpha(0.75);
}
draw_set_color(c_black);

draw_rectangle(0,0,display_get_gui_width(), display_get_gui_height(),false);

draw_set_alpha(((64-yPos)/64));
draw_set_color(c_white);

//"Game Over"
draw_set_halign(fa_center);
draw_text_transformed(display_get_gui_width()/2, yPos - (sinouty*3),text,3,3,(yPos*4)-4+(sinout*3));

draw_set_halign(fa_right);
//Score
draw_text_transformed(170, 32 + yPos, scoretext, 2, 2, (yPos)-1);
// Time
draw_text_transformed(170, 52 + yPos,  timetext, 2, 2, (yPos)-1);

draw_set_halign(fa_left);
//Score
draw_text_transformed(42, 32 + yPos, "Score:", 2, 2, (yPos)-1);
// Time
draw_text_transformed(42, 52 + yPos,  "Time:", 2, 2, (yPos)-1);

draw_set_halign(fa_center);
draw_set_color(btnCol[0,0]);
draw_rectangle(50,96,98,112,false);
draw_set_color(btnCol[0,1]);
draw_text(74,100,btnCol[0,2]);

draw_set_color(btnCol[1,0]);
draw_rectangle(114,96,162,112,false);
draw_set_color(btnCol[1,1]);
draw_text(138,100,btnCol[1,2]);

draw_set_alpha(1);

draw_sprite(spr_Cursor,0,(mouse_x - view_xview[0])*1.325,(mouse_y - view_yview[0])*1.325);

if(step == 2){
    draw_set_color(c_black);
    draw_set_alpha(0.75*((yPos)/64));
    draw_rectangle(0,0,display_get_gui_width(), display_get_gui_height(),false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
