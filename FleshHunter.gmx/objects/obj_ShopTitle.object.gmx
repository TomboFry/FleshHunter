<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>step = 0;
yPos = 192;
wait = 0;
text = "Shop";

sinval = 0;
sinout = 0;

sinvaly = 180;
sinouty = 0;

// backCol = make_colour_rgb(217,224,33);
backCol = c_black;

if(global.rmPlaying == rm_Level1){
    background_index[0] = bg_ShopBG;
    background_index[1] = bg_ShopBG_Walls;
} else {
    background_index[0] = bg_InfernoShopBG;
    background_index[1] = bg_ShopBG_Walls_Inferno;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(step == 0){
    if(yPos &gt; 1){
        yPos = yPos / 1.1;
    } else {
        yPos = 1;
        step = 1;
    }
} else if(step == 2){
    if(yPos &lt; 192){
        yPos = yPos * 1.1;
    } else {
        room_goto(global.rmPlaying);
    }
}

if(sinval &lt; 360){
    sinval += 2;
} else {
    sinval = 0;
}
if(sinvaly &lt; 360){
    sinvaly += 3;
} else {
    sinvaly = 0;
}
sinout = sin(degtorad(sinval));
sinouty = sin(degtorad(sinvaly));

if(mouse_x &gt;= room_width-60 &amp;&amp; mouse_y &gt;= room_height-38 &amp;&amp; mouse_x &lt;= room_width-8 &amp;&amp; mouse_y &lt;= room_height-8){
    backCol = make_colour_rgb(217,224,33);
    if(mouse_check_button_released(mb_left)){
        step = 2;
    }
} else {
    backCol = c_black;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_HUD);
draw_set_color(c_white);
draw_set_alpha(1);
draw_set_halign(fa_left);
draw_set_valign(fa_top);

draw_set_halign(fa_center);

// Title
draw_set_alpha(0.5*((192-yPos)/192));
draw_set_color(c_black);
draw_text_transformed(room_width/2,yPos+3 + (sinouty*4),text,5,5,(yPos/2)-0.5+(sinout*3));

draw_set_alpha(((192-yPos)/192));
draw_set_color(c_white);
draw_text_transformed(room_width/2,yPos+1 + (sinouty*4),text,5,5,(yPos/2)-0.5+(sinout*3));

// Flesh Count

draw_text_transformed((room_width/2)+12, 40 + yPos + (sinouty*4), global.totalFlesh, 2, 2, (yPos/2)-0.5+(sinout*3));
draw_sprite_ext(spr_HUD_Flesh,0,184,40+yPos + (sinouty*4),2,2,(yPos/2)-0.5+(sinout*3),-1,((192-yPos)/192));

// Go button
draw_set_color(backCol);
draw_rectangle(room_width-60,room_height-38,room_width-8,room_height-8,false);
draw_set_color(c_white);
draw_set_halign(fa_left);
draw_text_transformed(room_width-46,room_height-33,"Go!",2,2,0);

// Rectangle
draw_set_alpha(((yPos-1)/192));
draw_set_color(c_black);
draw_rectangle(0,0,room_width,room_height,false);

draw_set_alpha(1);

// Draw cursor on top of everything
draw_sprite_ext(spr_Cursor,0,mouse_x,mouse_y,2,2,0,-1,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
